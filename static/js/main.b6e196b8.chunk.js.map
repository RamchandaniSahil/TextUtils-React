{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","otherMode","oneMoreOtherMode","ExtraOtherMode","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b6e196b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className=\"btn-group mx-3\" role=\"group\" aria-label=\"Default button group\">\r\n              <button type=\"button\" className=\"btn btn-dark\" onClick={props.otherMode}></button>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={props.oneMoreOtherMode}></button>\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={props.ExtraOtherMode}></button>\r\n            </div>\r\n              {/* #000000 */}\r\n              {/* #1a4b50 */}\r\n              {/* #9d339f */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\")\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Cleared the text!\", \"success\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\")\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied the text!\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces!\", \"success\")\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'gray':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minuts read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mod is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  const otherMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#000000'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  const oneMoreOtherMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#1a4b50'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  const ExtraOtherMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#9d339f'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing Mode\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\"\n      // }, 1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode = {toggleMode} otherMode = {otherMode} oneMoreOtherMode = {oneMoreOtherMode} ExtraOtherMode = {ExtraOtherMode} />\n      <Alert alert={alert} />\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n    </>\n    // <Router>\n    //   <Navbar title=\"TextUtils\" mode={mode} toggleMode = {toggleMode} otherMode = {otherMode} oneMoreOtherMode = {oneMoreOtherMode} ExtraOtherMode = {ExtraOtherMode} />\n    //   <Alert alert={alert} />\n    //   <div className=\"container my-3\">\n    //     <Routes>\n    //       <Route exact path=\"/about\" element={<About />}/>\n    //       <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}/>\n    //     </Routes>\n    //   </div>\n    // </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}